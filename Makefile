.PHONY: help generate run test build clean install-tools docker-build docker-run lint

# Default target
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# Variables
SERVICE_NAME := service-skeleton
DOCKER_IMAGE := $(SERVICE_NAME)
DOCKER_TAG := latest
PORT := 8080

# Tools versions
OAPI_CODEGEN_VERSION := v2.1.0
GOLANGCI_LINT_VERSION := v1.55.2
SWAG_VERSION := v1.16.2

generate: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏–∑ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ Go generate
	@echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞..."
	@$(MAKE) generate-openapi
	@$(MAKE) generate-go
	@echo "‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

generate-openapi: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏–∑ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
	@echo "üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
	@mkdir -p internal/generated/api internal/generated/client internal/api
	
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π (entities) –≤ internal/generated/api/
	@oapi-codegen -generate types -package api -o internal/generated/api/types.go api/openapi.yaml
	
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ (Echo) –Ω–µ –Ω—É–∂–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º Chi handlers
	
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Chi handlers –≤ internal/generated/api/
	@oapi-codegen -generate chi-server -package api -o internal/generated/api/handlers.go api/openapi.yaml
	
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Ç–∏–ø–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
	@oapi-codegen -generate types,client -package client -o internal/generated/client/client.go api/openapi.yaml
	
	@echo "‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑ OpenAPI –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

generate-go: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å go generate
	@echo "üîß –ó–∞–ø—É—Å–∫ go generate..."
	@go generate ./...
	@echo "‚úÖ go generate –∑–∞–≤–µ—Ä—à–µ–Ω"

install-tools: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
	@echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
	@go install github.com/deepmap/oapi-codegen/v2/cmd/oapi-codegen@$(OAPI_CODEGEN_VERSION)
	@go install github.com/golangci/golangci-lint/cmd/golangci-lint@$(GOLANGCI_LINT_VERSION)
	@go install github.com/swaggo/swag/cmd/swag@$(SWAG_VERSION)
	@echo "‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
	@go run cmd/main.go

run-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å auto-reload
	@echo "üîÑ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@if command -v air > /dev/null; then \
		air; \
	else \
		echo "‚ö†Ô∏è  Air –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: go install github.com/cosmtrek/air@latest"; \
		$(MAKE) run; \
	fi

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	@go test -v -race -coverprofile=coverage.out ./...
	@go tool cover -html=coverage.out -o coverage.html
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏: coverage.html"

test-short: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã
	@echo "‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	@go test -short -v ./...

benchmark: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–Ω—á–º–∞—Ä–∫–∏
	@echo "üìä –ó–∞–ø—É—Å–∫ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤..."
	@go test -bench=. -benchmem ./...

build: ## –°–æ–±—Ä–∞—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
	@echo "üî® –°–±–æ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
	@CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o bin/$(SERVICE_NAME) ./cmd/
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: bin/$(SERVICE_NAME)"

build-local: ## –°–æ–±—Ä–∞—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ–∫—É—â–µ–π –û–°
	@echo "üî® –°–±–æ—Ä–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π –û–°..."
	@go build -o bin/$(SERVICE_NAME) ./cmd/
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: bin/$(SERVICE_NAME)"

fmt: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "üíÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	@go fmt ./...
	@goimports -w .
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

mod-tidy: ## –û—á–∏—Å—Ç–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@go mod tidy
	@go mod verify
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	@docker build -t $(DOCKER_IMAGE):$(DOCKER_TAG) .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: $(DOCKER_IMAGE):$(DOCKER_TAG)"

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	@echo "üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	@docker run -p $(PORT):$(PORT) --env-file .env --rm --name $(SERVICE_NAME) $(DOCKER_IMAGE):$(DOCKER_TAG)

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	@docker stop $(SERVICE_NAME) || true

docker-clean: ## –£–¥–∞–ª–∏—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	@docker rmi $(DOCKER_IMAGE):$(DOCKER_TAG) || true
	@docker system prune -f

dev-setup: install-tools mod-tidy generate ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üéâ –°—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤–∞!"

ci: lint test build ## CI pipeline: –ª–∏–Ω—Ç–∏–Ω–≥, —Ç–µ—Å—Ç—ã, —Å–±–æ—Ä–∫–∞
	@echo "‚úÖ CI pipeline –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
health-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞..."
	@curl -f http://localhost:$(PORT)/health || echo "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç—Ä–∏–∫
metrics: ## –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏ Prometheus
	@echo "üìä –ú–µ—Ç—Ä–∏–∫–∏ Prometheus:"
	@curl -s http://localhost:$(PORT)/metrics

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
version: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é Go –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:"
	@echo "–°–µ—Ä–≤–∏—Å: $(SERVICE_NAME)"
	@echo "Go –≤–µ—Ä—Å–∏—è: $$(go version)"
	@echo "Git –∫–æ–º–º–∏—Ç: $$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')"
	@echo "–î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏: $$(date)"

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º
pre-commit: fmt lint test ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ. –ì–æ—Ç–æ–≤–æ –∫ –∫–æ–º–º–∏—Ç—É!"

# –°–æ–∑–¥–∞–Ω–∏–µ release
release: clean generate test build docker-build ## –°–æ–∑–¥–∞—Ç—å release
	@echo "üöÄ Release –≥–æ—Ç–æ–≤!"
